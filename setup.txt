---for populating postresql---
createdb contests
psql contests
\q
psql contests < database/test-pg-data.sql
psql contests
contests~# \dt

query: 
create view total_votes_by_name as select id as name_id, (select count(up) from votes v where v.name_id = n.id and up = true) as up, (select count(up) from votes v where v.name_id = n.id and up = false) as down from names n;
 
---for MongoDB populate---
node database/loadTestMongoData.js

URL: http://localhost:3000/graphql

---GraphQL---
{
  me(key: "4242"){
    id
    email
    firstName
    lastName
    fullName
    createdAt
  }
}

---using alias and fragment--- 
{
  user1: me(key: "4242"){
    ...userInfo
  },
  user2: me(key: "0000"){
    ...userInfo
  }
}

fragment userInfo on MeType {
  id
  email
  fullName
}

---nested list---
{
  me(key: "4242"){
    id
    email
    fullName
    contests {
      id
      code
      title
      description
      status
      createdAt
    }
  }
}

---reading from mongo---
query MyContests{
  me(key: "4242"){
    id
    email
    fullName
    contestsCount
    namesCount
    votesCount
  }
}

query MyContests{
  me(key: "4242"){
    id
    email
    fullName
    contestsCount
    namesCount
    votesCount
    contests {
      title
      names {
        label
        createdBy {
          fullName
        }
      }
    }
  }
}

query MyContests{
  me(key: "4242"){
    id
    email
    fullName
    contestsCount
    namesCount
    votesCount
    contests {
      title
      names {
        label
        createdBy {
          fullName
        }
        totalVotes {
          up
          down
        }
      }
    }
  }
}